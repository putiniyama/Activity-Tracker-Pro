#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING:${NC} $1"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi
    
    log "Docker –∏ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úÖ"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
check_env() {
    if [ ! -f .env ]; then
        error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        echo "–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example:"
        echo "cp .env.example .env"
        echo "–ó–∞—Ç–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    required_vars=("BOT_TOKEN" "SECRET_KEY")
    for var in "${required_vars[@]}"; do
        if ! grep -q "^${var}=" .env; then
            error "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ!"
            exit 1
        fi
        
        value=$(grep "^${var}=" .env | cut -d'=' -f2)
        if [[ $value == "your-"* ]] || [[ $value == "1234567890"* ]]; then
            error "–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ! –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ."
            exit 1
        fi
    done
    
    log "–§–∞–π–ª .env –ø—Ä–æ–≤–µ—Ä–µ–Ω ‚úÖ"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_dirs() {
    log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
    mkdir -p data logs ssl
    chmod 755 data logs
    log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã ‚úÖ"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ (—Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö)
generate_ssl() {
    if [ ! -f ssl/cert.pem ] || [ ! -f ssl/key.pem ]; then
        warn "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ..."
        
        openssl req -x509 -newkey rsa:4096 -keyout ssl/key.pem -out ssl/cert.pem \
            -days 365 -nodes -subj "/C=RU/ST=State/L=City/O=Organization/CN=localhost"
        
        chmod 600 ssl/key.pem
        chmod 644 ssl/cert.pem
        
        warn "‚ö†Ô∏è  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
        warn "‚ö†Ô∏è  –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Let's Encrypt –∏–ª–∏ –¥—Ä—É–≥–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã!"
    else
        log "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã ‚úÖ"
    fi
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
deploy() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose down
    
    log "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤..."
    docker-compose build --no-cache
    
    log "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    if ! docker-compose up -d 2>&1 | tee /tmp/deploy.log; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–≤—è–∑–∞–Ω–∞ —Å rate limit
        if grep -q "toomanyrequests\|rate.limit" /tmp/deploy.log; then
            warn "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å Docker Hub rate limit!"
            warn "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–µ—Ä—Å–∏—é –±–µ–∑ nginx..."
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –≤–µ—Ä—Å–∏—é
            log "–ó–∞–ø—É—Å–∫ –±–µ–∑ nginx (–ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –ø–æ—Ä—Ç 80)..."
            docker-compose -f docker-compose-no-nginx.yml down
            docker-compose -f docker-compose-no-nginx.yml up -d
            
            log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
            sleep 10
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏
            if docker-compose -f docker-compose-no-nginx.yml ps | grep -q "Up"; then
                log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –±–µ–∑ nginx —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
                echo ""
                echo "üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
                echo "   üì± Telegram –±–æ—Ç: @your_bot_name"
                echo "   üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost (–ø–æ—Ä—Ç 80)"
                echo "   üåê –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:8000"
                echo ""
                echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω. SSL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."
                echo "üìù –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è SSL –ø–æ–∑–∂–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: docker login –∏ ./deploy.sh"
                echo ""
                echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
                docker-compose -f docker-compose-no-nginx.yml ps
                echo ""
                echo "üìù –õ–æ–≥–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π:"
                echo "   docker-compose -f docker-compose-no-nginx.yml logs -f"
                return 0
            else
                error "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –±–µ–∑ nginx —Ç–∞–∫–∂–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!"
                echo "–õ–æ–≥–∏ –æ—à–∏–±–æ–∫:"
                docker-compose -f docker-compose-no-nginx.yml logs
                exit 1
            fi
        else
            error "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ!"
            echo "–õ–æ–≥–∏ –æ—à–∏–±–æ–∫:"
            cat /tmp/deploy.log
            exit 1
        fi
    fi
    
    log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—ã—á–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    if docker-compose ps | grep -q "Up"; then
        log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
        echo ""
        echo "üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
        echo "   üì± Telegram –±–æ—Ç: @your_bot_name"
        echo "   üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://localhost"
        echo "   üåê –ë–µ–∑ SSL: http://localhost:8000"
        echo ""
        echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
        docker-compose ps
        echo ""
        echo "üìù –õ–æ–≥–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥–æ–π:"
        echo "   docker-compose logs -f"
        echo ""
        log "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ add_user.py..."
        docker-compose exec web python /app/add_user.py || true
        # === –î–û–ë–ê–í–õ–Ø–Æ –ü–û–°–õ–ï –ó–ê–ü–£–°–ö–ê –ö–û–ù–¢–ï–ô–ù–ï–†–û–í ===
        # –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è FIRST_ADMIN_ID –∑–∞–¥–∞–Ω–∞
        if [ ! -z "$FIRST_ADMIN_ID" ]; then
          python3 add_user.py --admin --telegram_id $FIRST_ADMIN_ID
        fi
    else
        error "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å!"
        echo "–õ–æ–≥–∏ –æ—à–∏–±–æ–∫:"
        docker-compose logs
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
update() {
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    docker-compose down
    
    # –ü—É–ª–ª –∏–∑–º–µ–Ω–µ–Ω–∏–π (–µ—Å–ª–∏ —ç—Ç–æ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)
    if [ -d .git ]; then
        log "–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑ Git..."
        git pull
    fi
    
    # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
    docker-compose build --no-cache
    docker-compose up -d
    
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚úÖ"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
logs() {
    echo "üìù –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
    docker-compose logs -f --tail=100
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose down
    log "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ‚úÖ"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-deploy}" in
    "deploy")
        log "üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Telegram Bot Employee Tracker"
        check_docker
        check_env
        create_dirs
        generate_ssl
        deploy
        ;;
    "update")
        log "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        update
        ;;
    "logs")
        logs
        ;;
    "stop")
        stop
        ;;
    "restart")
        stop
        sleep 3
        deploy
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {deploy|update|logs|stop|restart}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  deploy  - –ü–µ—Ä–≤–∏—á–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  update  - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        echo "  logs    - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
        echo "  stop    - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
        exit 1
        ;;
esac 