#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã"""

import asyncio
from database.database import AsyncSessionLocal
from database.models import Employee, SystemSettings
from sqlalchemy import select

async def check_setup():
    async with AsyncSessionLocal() as db:
        print("üîß –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´\n")
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        result = await db.execute(select(Employee))
        employees = result.scalars().all()
        
        print("üë• –°–û–¢–†–£–î–ù–ò–ö–ò –í –°–ò–°–¢–ï–ú–ï:")
        for emp in employees:
            print(f"   üìõ {emp.full_name}")
            print(f"   üÜî Telegram ID: {emp.telegram_id}")
            print(f"   üë§ Username: @{emp.telegram_username}")
            print(f"   ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if emp.is_active else '–ù–µ—Ç'}")
            print(f"   üëë –ê–¥–º–∏–Ω: {'–î–∞' if emp.is_admin else '–ù–µ—Ç'}")
            print("   ___")
        
        print(f"üìä –í—Å–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(employees)}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        result = await db.execute(select(SystemSettings))
        settings = result.scalars().all()
        settings_dict = {s.key: s.value for s in settings}
        
        print("\n‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
        print(f"   üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã: {settings_dict.get('notifications_enabled', '–ù–ï –ù–ê–ô–î–ï–ù–û')}")
        print(f"   ‚è∞ 1-–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {settings_dict.get('notification_delay_1', '–ù–ï –ù–ê–ô–î–ï–ù–û')} –º–∏–Ω")
        print(f"   ‚è∞ 2-–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {settings_dict.get('notification_delay_2', '–ù–ï –ù–ê–ô–î–ï–ù–û')} –º–∏–Ω")
        print(f"   ‚è∞ 3-–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {settings_dict.get('notification_delay_3', '–ù–ï –ù–ê–ô–î–ï–ù–û')} –º–∏–Ω")
        
        # 3. –û–±—ä—è—Å–Ω—è–µ–º –ª–æ–≥–∏–∫—É
        print("\nüéØ –ö–ê–ö –†–ê–ë–û–¢–ê–ï–¢ –°–ò–°–¢–ï–ú–ê:")
        print("   1. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ö–õ–ò–ï–ù–¢–ê (–ù–ï –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤) ‚Üí —Å–æ–∑–¥–∞–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        print("   2. –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –°–û–¢–†–£–î–ù–ò–ö–ê ‚Üí —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ù–ï —Å–æ–∑–¥–∞—é—Ç—Å—è")
        print("   3. –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–û–ú –≤ –≥—Ä—É–ø–ø–µ")
        
        print("\n‚ùó –ß–ê–°–¢–´–ï –ü–†–û–ë–õ–ï–ú–´:")
        print("   üî∏ –ß–µ–ª–æ–≤–µ–∫ –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –£–ñ–ï –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫")
        print("   üî∏ –ë–æ—Ç –ù–ï –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ –≥—Ä—É–ø–ø–µ")
        print("   üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç–∫–ª—é—á–µ–Ω—ã")
        
        # 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
        print("\n‚úÖ –ß–¢–û –ü–†–û–í–ï–†–ò–¢–¨:")
        print("   1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —á–µ–ª–æ–≤–µ–∫ –ù–ï –≤ —Å–ø–∏—Å–∫–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤—ã—à–µ")
        print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –±–æ—Ç –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–† –≤ –≥—Ä—É–ø–ø–µ")
        print("   3. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω—ã (true)")
        
        # 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        employee_ids = [emp.telegram_id for emp in employees]
        print(f"\nüÜî ID –°–û–¢–†–£–î–ù–ò–ö–û–í: {employee_ids}")
        print("   ‚òùÔ∏è –ï—Å–ª–∏ ID —á–µ–ª–æ–≤–µ–∫–∞ –ï–°–¢–¨ –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ ‚Üí –æ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ù–ï –±—É–¥–µ—Ç!")

if __name__ == "__main__":
    asyncio.run(check_setup()) 