#!/usr/bin/env python3
"""–ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–º–Ω–æ–π –ª–æ–≥–∏–∫–∏"""

import os
import sqlite3
from datetime import datetime

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ["BOT_TOKEN"] = "8110382002:AAHuWex2O-QvW7ElqyOMu1ZHJEGiS8dSGmE"
os.environ["ADMIN_CHAT_ID"] = "896737668"

def migrate_database():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —É–º–Ω–æ–π –ª–æ–≥–∏–∫–∏"""
    
    print("üîß –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    conn = sqlite3.connect('employee_tracker.db')
    cursor = conn.cursor()
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É messages
        print("üìù –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É messages...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º client_telegram_id
        try:
            cursor.execute("ALTER TABLE messages ADD COLUMN client_telegram_id BIGINT")
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ client_telegram_id")
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e):
                print("   ‚ö†Ô∏è –ü–æ–ª–µ client_telegram_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                raise
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º addressed_to_employee_id
        try:
            cursor.execute("ALTER TABLE messages ADD COLUMN addressed_to_employee_id INTEGER")
            cursor.execute("CREATE INDEX ix_messages_addressed_to_employee_id ON messages (addressed_to_employee_id)")
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ addressed_to_employee_id")
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e) or "already exists" in str(e):
                print("   ‚ö†Ô∏è –ü–æ–ª–µ addressed_to_employee_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                raise
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º is_addressed_to_specific
        try:
            cursor.execute("ALTER TABLE messages ADD COLUMN is_addressed_to_specific BOOLEAN DEFAULT 0")
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ is_addressed_to_specific")
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e):
                print("   ‚ö†Ô∏è –ü–æ–ª–µ is_addressed_to_specific —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                raise
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º reply_to_message_id
        try:
            cursor.execute("ALTER TABLE messages ADD COLUMN reply_to_message_id BIGINT")
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ reply_to_message_id")
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e):
                print("   ‚ö†Ô∏è –ü–æ–ª–µ reply_to_message_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                raise
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º message_type
        try:
            cursor.execute("ALTER TABLE messages ADD COLUMN message_type VARCHAR DEFAULT 'client'")
            print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ message_type")
        except sqlite3.OperationalError as e:
            if "duplicate column name" in str(e):
                print("   ‚ö†Ô∏è –ü–æ–ª–µ message_type —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                raise
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É chat_employees
        print("üë• –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É chat_employees...")
        try:
            cursor.execute("""
                CREATE TABLE chat_employees (
                    id INTEGER NOT NULL PRIMARY KEY,
                    chat_id BIGINT NOT NULL,
                    employee_id INTEGER NOT NULL,
                    is_active_in_chat BOOLEAN DEFAULT 1,
                    last_seen_at DATETIME NOT NULL,
                    created_at DATETIME NOT NULL,
                    FOREIGN KEY(employee_id) REFERENCES employees (id)
                )
            """)
            cursor.execute("CREATE INDEX ix_chat_employees_id ON chat_employees (id)")
            cursor.execute("CREATE INDEX ix_chat_employees_chat_id ON chat_employees (chat_id)")
            cursor.execute("CREATE INDEX ix_chat_employees_employee_id ON chat_employees (employee_id)")
            print("   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_employees —Å–æ–∑–¥–∞–Ω–∞")
        except sqlite3.OperationalError as e:
            if "already exists" in str(e):
                print("   ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ chat_employees —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            else:
                raise
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –≤ messages
        print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏...")
        cursor.execute("UPDATE messages SET message_type = 'client' WHERE message_type IS NULL")
        cursor.execute("UPDATE messages SET is_addressed_to_specific = 0 WHERE is_addressed_to_specific IS NULL")
        
        conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("PRAGMA table_info(messages)")
        columns = cursor.fetchall()
        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã messages –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏:")
        for col in columns:
            print(f"   {col[1]} ({col[2]})")
        
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='chat_employees'")
        if cursor.fetchone():
            print("\n‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_employees —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print("\n‚ùå –¢–∞–±–ª–∏—Ü–∞ chat_employees –ù–ï —Å–æ–∑–¥–∞–Ω–∞")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        conn.rollback()
        raise
    
    finally:
        conn.close()

if __name__ == "__main__":
    migrate_database() 