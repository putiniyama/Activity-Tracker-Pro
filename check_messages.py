#!/usr/bin/env python3
"""–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

import asyncio
from database.database import AsyncSessionLocal
from database.models import Message, Employee
from sqlalchemy import select

async def check_messages():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ"""
    async with AsyncSessionLocal() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        result = await session.execute(select(Employee))
        employees = result.scalars().all()
        print("\nüë• –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –≤ –±–∞–∑–µ:")
        for emp in employees:
            print(f"ID: {emp.id}, Telegram ID: {emp.telegram_id}, –ò–º—è: {emp.full_name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        result = await session.execute(select(Message))
        messages = result.scalars().all()
        print(f"\nüì® –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
        
        if messages:
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º:")
            for msg in messages:
                print(f"ID: {msg.id}, –°–æ—Ç—Ä—É–¥–Ω–∏–∫: {msg.employee_id}, "
                      f"–¢–∏–ø: {msg.message_type}, "
                      f"–ü–æ–ª—É—á–µ–Ω–æ: {msg.received_at}, "
                      f"–û—Ç–≤–µ—á–µ–Ω–æ: {msg.responded_at}, "
                      f"–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {msg.response_time_minutes} –º–∏–Ω")
        else:
            print("\n‚ùå –°–æ–æ–±—â–µ–Ω–∏–π –≤ –±–∞–∑–µ –Ω–µ—Ç!")
            print("\nüí° –ß—Ç–æ –¥–µ–ª–∞—Ç—å:")
            print("1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É")
            print("2. –î–∞–π—Ç–µ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            print("3. –ü—É—Å—Ç—å –∫—Ç–æ-—Ç–æ –Ω–∞–ø–∏—à–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É")
            print("4. –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (reply)")

if __name__ == "__main__":
    asyncio.run(check_messages()) 